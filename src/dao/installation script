/*
E-Learning Plattform "LearnSphere"

Installationsskript:
*/

-- Löschen der Tabellen, falls sie existieren
DROP TABLE Benutzer CASCADE CONSTRAINTS;
DROP TABLE Kurs CASCADE CONSTRAINTS;
DROP TABLE Lernmaterial CASCADE CONSTRAINTS;
DROP TABLE Kurs_Anmeldung CASCADE CONSTRAINTS;
DROP TABLE Bewertung CASCADE CONSTRAINTS;
DROP TABLE Kategorie CASCADE CONSTRAINTS;
DROP TABLE Bestellung CASCADE CONSTRAINTS;
DROP TABLE Zertifikat CASCADE CONSTRAINTS;

-- Erstellen der Tabelle Benutzer
CREATE TABLE Benutzer (
    BenutzerID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Name VARCHAR(100) NOT NULL,
    E_Mail VARCHAR(150) UNIQUE NOT NULL,
    Rolle VARCHAR(10) CHECK (Rolle IN ('Lehrer', 'Student')) NOT NULL
);



-- Erstellen der Tabelle Kategorie mit rekursivem FK
CREATE TABLE Kategorie (
    KategorieID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Name VARCHAR(50) NOT NULL,
    ElternKategorieID NUMBER,
    FOREIGN KEY (ElternKategorieID) REFERENCES Kategorie(KategorieID)
);



-- Erstellen der Tabelle Kurs
CREATE TABLE Kurs (
    KursID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Titel VARCHAR(100) NOT NULL,
    Beschreibung VARCHAR(1000),
    Preis DECIMAL(6,2) CHECK (Preis >= 0) NOT NULL,
    Erstellungsdatum DATE DEFAULT SYSDATE NOT NULL,
    LehrerID NUMBER NOT NULL,
    KategorieID NUMBER,
    FOREIGN KEY (LehrerID) REFERENCES Benutzer(BenutzerID),
    FOREIGN KEY (KategorieID) REFERENCES Kategorie(KategorieID)
);



-- Erstellen der Tabelle Lernmaterial
CREATE TABLE Lernmaterial (
    MaterialID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    Titel VARCHAR(100) NOT NULL,
    Typ VARCHAR(20) CHECK (Typ IN ('Video', 'Text', 'Quiz')) NOT NULL,
    Inhalt CLOB,
    KursID NUMBER NOT NULL,
    Upload_Datum DATE DEFAULT SYSDATE,
    FOREIGN KEY (KursID) REFERENCES Kurs(KursID)
);



-- Erstellen der Tabelle Kurs_Anmeldung
CREATE TABLE Kurs_Anmeldung (
    KursID NUMBER NOT NULL,
    StudentID NUMBER NOT NULL,
    Anmeldedatum DATE DEFAULT SYSDATE NOT NULL,
    Fortschritt NUMBER CHECK (Fortschritt BETWEEN 0 AND 100),
    Abschlussdatum DATE,
    PRIMARY KEY (KursID, StudentID),
    FOREIGN KEY (KursID) REFERENCES Kurs(KursID),
    FOREIGN KEY (StudentID) REFERENCES Benutzer(BenutzerID)
);



-- Erstellen der Tabelle Bewertung
CREATE TABLE Bewertung (
    BewertungID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    KursID NUMBER NOT NULL,
    StudentID NUMBER NOT NULL,
    Bewertung NUMBER CHECK (Bewertung BETWEEN 1 AND 5) NOT NULL,
    Kommentar VARCHAR(500),
    Bewertungsdatum DATE DEFAULT SYSDATE NOT NULL,
    FOREIGN KEY (KursID) REFERENCES Kurs(KursID),
    FOREIGN KEY (StudentID) REFERENCES Benutzer(BenutzerID)
);



-- Erstellen der Tabelle Bestellung
CREATE TABLE Bestellung (
    BestellID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    StudentID NUMBER NOT NULL,
    KursID NUMBER NOT NULL,
    Bestelldatum DATE DEFAULT SYSDATE NOT NULL,
    Gesamtpreis DECIMAL(6,2) CHECK (Gesamtpreis >= 0),
    FOREIGN KEY (StudentID) REFERENCES Benutzer(BenutzerID),
    FOREIGN KEY (KursID) REFERENCES Kurs(KursID)
);



-- Erstellen der Tabelle Zertifikat
CREATE TABLE Zertifikat (
    ZertifikatID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    KursID NUMBER NOT NULL,
    StudentID NUMBER NOT NULL,
    Ausstellungsdatum DATE DEFAULT SYSDATE NOT NULL,
    FOREIGN KEY (KursID) REFERENCES Kurs(KursID),
    FOREIGN KEY (StudentID) REFERENCES Benutzer(BenutzerID)
);

-- Beispiel-Daten für Benutzer
INSERT INTO Benutzer (Name, E_Mail, Rolle) VALUES ('Max Mustermann', 'max@beispiel.de', 'Lehrer');
INSERT INTO Benutzer (Name, E_Mail, Rolle) VALUES ('Anna Schmidt', 'anna@beispiel.de', 'Student');

-- Beispiel-Daten für Kategorien
INSERT INTO Kategorie (Name, ElternKategorieID) VALUES ('Mathematik', NULL);
INSERT INTO Kategorie (Name, ElternKategorieID) VALUES ('Lineare Algebra', 1);

-- Beispiel-Daten für Kurs
INSERT INTO Kurs (Titel, Beschreibung, Preis, LehrerID, KategorieID) VALUES ('Einführung in Algebra', 'Algebra Grundlagen', 49.99, 1, 1);

-- Beispiel-Daten für Lernmaterial
INSERT INTO Lernmaterial (Titel, Typ, Inhalt, KursID) VALUES ('Algebra Basics Video', 'Video', 'Inhalt des Videos...', 1);

-- Beispiel-Daten für Kurs_Anmeldung
INSERT INTO Kurs_Anmeldung (KursID, StudentID, Fortschritt) VALUES (1, 2, 50);

-- Beispiel-Daten für Bewertung
INSERT INTO Bewertung (KursID, StudentID, Bewertung, Kommentar) VALUES (1, 2, 5, 'Sehr guter Kurs!');

-- Beispiel-Daten für Bestellung
INSERT INTO Bestellung (StudentID, KursID, Gesamtpreis) VALUES (2, 1, 49.99);

-- Beispiel-Daten für Zertifikat
INSERT INTO Zertifikat (KursID, StudentID) VALUES (1, 2);

-- Versuch, einen Kurs ohne gültige LehrerID einzufügen.
INSERT INTO Kurs (Titel, Beschreibung, Preis, LehrerID, KategorieID)
VALUES ('SQL für Anfänger', 'Einführung in SQL', 99.99, 9999, 1);


-- Versuch, einen Benutzer mit einer doppelten Rolle einzufügen.
INSERT INTO Benutzer (Name, E_Mail, Rolle)
VALUES ('Max Mustermann', 'max@beispiel.de', 'Lehrer');

-- Versuch, einen Kurs_Anmeldung-Datensatz mit einem ungültigen Fortschritt einzufügen.
INSERT INTO Kurs_Anmeldung (KursID, StudentID, Anmeldedatum, Fortschritt)
VALUES (1, 1, SYSDATE, 110);

-- Test: Zertifikat für einen nicht abgeschlossenen Kurs erstellen.
INSERT INTO Zertifikat (KursID, StudentID)
VALUES (1, 1);

-- Versuch, einen Kurs ohne KategorieID einzufügen.
INSERT INTO Kurs (Titel, Beschreibung, Preis, LehrerID)
VALUES ('Datenanalyse', 'Grundlagen der Datenanalyse', 149.99, 1);


-- Versuch, eine Bestellung für einen nicht existierenden Kurs oder Benutzer zu erstellen.
INSERT INTO Bestellung (StudentID, KursID, Gesamtpreis)
VALUES (999, 999, 99.99);

-- Test: Versuch, einen Kurs mit existierenden Bestellungen zu löschen.
DELETE FROM Kurs WHERE KursID = 1;


-- Versuch, denselben Studenten erneut für denselben Kurs anzumelden.
INSERT INTO Kurs_Anmeldung (KursID, StudentID, Anmeldedatum)
VALUES (1, 1, SYSDATE);

-- Versuch, denselben Studenten erneut für denselben Kurs anzumelden.
INSERT INTO Kurs_Anmeldung (KursID, StudentID, Anmeldedatum)
VALUES (1, 1, SYSDATE);

-- Versuch, eine Kategorie zu erstellen, die sich selbst als Elternkategorie hat.
INSERT INTO Kategorie (Name, ElternKategorieID)
VALUES ('Mathematik', 1); -- Angenommen, KategorieID 1 ist "Mathematik"

-- Versuch, eine Kategorie zu erstellen, die sich selbst als Elternkategorie hat.
INSERT INTO Kategorie (Name, ElternKategorieID)
VALUES ('Mathematik', 1); -- Angenommen, KategorieID 1 ist "Mathematik"
-- Erwartete Ausgabe: Fehler aufgrund einer Fremdschlüsselverletzung.

-- Versuch, eine Bestellung für einen Lehrer zu erstellen.
INSERT INTO Bestellung (StudentID, KursID, Gesamtpreis)
VALUES (1, 1, 99.99); -- Angenommen, BenutzerID 1 ist ein Lehrer


SELECT 
    k.KursID,
    k.Titel AS KursTitel,
    u.BenutzerID AS LehrerID,
    u.Name AS LehrerName,
    AVG(be.Bewertung) AS DurchschnittsBewertung,
    COUNT(DISTINCT ka.StudentID) AS AnzahlAnmeldungen,
    COUNT(DISTINCT z.ZertifikatID) AS AnzahlZertifikate
FROM 
    Kurs k
JOIN 
    Benutzer u ON k.LehrerID = u.BenutzerID
LEFT JOIN 
    Bewertung be ON k.KursID = be.KursID
LEFT JOIN 
    Kurs_Anmeldung ka ON k.KursID = ka.KursID
LEFT JOIN 
    Zertifikat z ON k.KursID = z.KursID AND z.StudentID = ka.StudentID
GROUP BY 
    k.KursID, k.Titel, u.BenutzerID, u.Name
ORDER BY 
    DurchschnittsBewertung DESC;
    
    

-- Einfügen der Hauptkategorie "Mathematik"
INSERT INTO Kategorie (Name) VALUES ('Mathematik'); -- ID wird automatisch generiert (angenommen ID 21)

-- Einfügen von Unterkategorien unter "Mathematik"
INSERT INTO Kategorie (Name, ElternKategorieID) VALUES ('Algebra', 21); -- Unterkategorie von Mathematik
INSERT INTO Kategorie (Name, ElternKategorieID) VALUES ('Geometrie', 21); -- Unterkategorie von Mathematik
INSERT INTO Kategorie (Name, ElternKategorieID) VALUES ('Statistik', 21); -- Unterkategorie von Mathematik

-- Weitere Unterkategorien unter "Algebra"
INSERT INTO Kategorie (Name, ElternKategorieID) VALUES ('Lineare Algebra', 22); -- Unterkategorie von Algebra
INSERT INTO Kategorie (Name, ElternKategorieID) VALUES ('Abstrakte Algebra', 22); -- Unterkategorie von Algebra

-- Weitere Unterkategorien unter "Geometrie"
INSERT INTO Kategorie (Name, ElternKategorieID) VALUES ('Analytische Geometrie', 23); -- Unterkategorie von Geometrie
INSERT INTO Kategorie (Name, ElternKategorieID) VALUES ('Euklidische Geometrie', 23); -- Unterkategorie von Geometrie

-- Weitere Unterkategorien unter "Statistik"
INSERT INTO Kategorie (Name, ElternKategorieID) VALUES ('Deskriptive Statistik', 24); -- Unterkategorie von Statistik
INSERT INTO Kategorie (Name, ElternKategorieID) VALUES ('Inferenzstatistik', 24); -- Unterkategorie von Statistik

-- Weitere tiefere Unterkategorien (optional)
INSERT INTO Kategorie (Name, ElternKategorieID) VALUES ('Vektorraum', 25); -- Unterkategorie von Lineare Algebra
INSERT INTO Kategorie (Name, ElternKategorieID) VALUES ('Gruppentheorie', 26); -- Unterkategorie von Abstrakte Algebra
INSERT INTO Kategorie (Name, ElternKategorieID) VALUES ('Koordinatensysteme', 27); -- Unterkategorie von Analytische Geometrie
INSERT INTO Kategorie (Name, ElternKategorieID) VALUES ('Wahrscheinlichkeitsrechnung', 28); -- Unterkategorie von Inferenzstatistik







INSERT INTO Kurs (Titel, Beschreibung, Preis, LehrerID, KategorieID) VALUES ('Einführung in die Mathematik', 'Grundlagen der Mathematik', 29.99, 1, 21);
INSERT INTO Kurs (Titel, Beschreibung, Preis, LehrerID, KategorieID) VALUES ('Mathematisches Denken', 'Problemlösung und Argumentation', 39.99, 2, 21);

-- Kurse in der Unterkategorie "Algebra"
INSERT INTO Kurs (Titel, Beschreibung, Preis, LehrerID, KategorieID) VALUES ('Grundlagen der Algebra', 'Einführung in die Algebra', 34.99, 3, 22);
INSERT INTO Kurs (Titel, Beschreibung, Preis, LehrerID, KategorieID) VALUES ('Quadratische Gleichungen', 'Lösen und Verstehen von Gleichungen', 19.99, 4, 22);

-- Kurse in der Unterkategorie "Geometrie"
INSERT INTO Kurs (Titel, Beschreibung, Preis, LehrerID, KategorieID) VALUES ('Grundlagen der Geometrie', 'Einführung in die Geometrie', 29.99, 5, 23);
INSERT INTO Kurs (Titel, Beschreibung, Preis, LehrerID, KategorieID) VALUES ('Dreiecke und ihre Eigenschaften', 'Geometrische Grundlagen', 24.99, 6, 23);

-- Kurse in der Unterkategorie "Statistik"
INSERT INTO Kurs (Titel, Beschreibung, Preis, LehrerID, KategorieID) VALUES ('Grundlagen der Statistik', 'Verstehen von Daten', 39.99, 7, 24);
INSERT INTO Kurs (Titel, Beschreibung, Preis, LehrerID, KategorieID) VALUES ('Wahrscheinlichkeit und Statistik', 'Grundlagen der Wahrscheinlichkeit', 44.99, 8, 24);

-- Kurse in der Unter-Unterkategorie "Lineare Algebra"
INSERT INTO Kurs (Titel, Beschreibung, Preis, LehrerID, KategorieID) VALUES ('Vektoren und Matrizen', 'Grundlagen der linearen Algebra', 49.99, 1, 25);
INSERT INTO Kurs (Titel, Beschreibung, Preis, LehrerID, KategorieID) VALUES ('Lineare Gleichungssysteme', 'Verstehen und Lösen', 34.99, 2, 25);




    





